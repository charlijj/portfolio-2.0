{"ast":null,"code":"export function headerAnimation() {\n  const ctx = document.getElementById(\"header-canvas\").getContext(\"2d\");\n  const titleText = \"Welcome To Jasper's Portfolio\";\n  const header = document.createElement(\"h1\");\n  header.textContent = titleText;\n  header.classList.add(\"animate-in\", \"title\");\n  const subtitleText = \"Enjoy Your Stay!\";\n  const subtitle = document.createElement(\"h3\");\n  subtitle.textContent = subtitleText;\n  subtitle.classList.add(\"animate-in\", \"subtitle\");\n  if (!ctx.canvas.parentNode.querySelector(\"h1\")) {\n    ctx.canvas.parentNode.appendChild(header, ctx.canvas);\n  }\n  setTimeout(() => {\n    if (!ctx.canvas.parentNode.querySelector(\"h3\")) {\n      ctx.canvas.parentNode.appendChild(subtitle, ctx.canvas);\n    }\n  }, 500);\n  ctx.canvas.style.display = \"none\";\n}\nexport function moveCircles() {\n  const circles = document.querySelectorAll(\".circle\");\n  const header = document.querySelector(\".App-header\");\n  const headerWidth = header.offsetWidth;\n  const headerHeight = header.offsetHeight;\n  circles.forEach(circle => {\n    let x = parseInt(circle.style.left) || 0;\n    let y = parseInt(circle.style.top) || 0;\n    const angle = Math.random() * 2 * Math.PI;\n    const distance = Math.random() * 10;\n    let deltaX = distance * Math.cos(angle);\n    let deltaY = distance * Math.sin(angle);\n    function animateCircle() {\n      x += deltaX;\n      y += deltaY;\n      if (x <= 0 || x >= headerWidth - circle.width) {\n        deltaX *= -1;\n      }\n      if (y <= 0 || y >= headerHeight - circle.offsetHeight) {\n        deltaY *= -1;\n      }\n      circle.style.left = `${x}px`;\n      circle.style.top = `${y}px`;\n      requestAnimationFrame(animateCircle);\n    }\n    animateCircle();\n  });\n}\nexport function audioVisualizer() {\n  const canvas = document.getElementById(`header-canvas`);\n  const ctx = canvas.getContext(`2d`);\n  console.log(canvas);\n  console.log(\"hellow\");\n  const audioCtx = new AudioContext();\n  const analyser = audioCtx.createAnalyser();\n  const audio = new Audio(`../ext_song.mp3`);\n  const audioSource = audioCtx.createMediaElementSource(audio);\n  audioSource.connect(analyser);\n  analyser.fftSize = 1024;\n  const bufferLen = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(bufferLen);\n  function animateFullRainbowBar() {\n    if (audio.paused) {\n      audio.play();\n    }\n    const barWidth = canvas.width / bufferLen;\n    let barHeight;\n    let x = 0;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    analyser.getByteFrequencyData(dataArray);\n    for (let i = 0; i < bufferLen; i++) {\n      barHeight = dataArray[i] * 2;\n      const hue = i * 10;\n      ctx.fillStyle = `hsl(` + hue + `,100%, 50%)`;\n\n      // let red = 100;\n      // let blue = barHeight + 30;\n      // let green = barHeight + 50;\n\n      ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n      ctx.save();\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n      ctx.restore();\n      x += barWidth + 5;\n      if (x > canvas.width / 2) {\n        x = 0;\n        break;\n      }\n    }\n    requestAnimationFrame(animateFullRainbowBar);\n  }\n  audio.play();\n  animateFullRainbowBar();\n}","map":{"version":3,"names":["headerAnimation","ctx","document","getElementById","getContext","titleText","header","createElement","textContent","classList","add","subtitleText","subtitle","canvas","parentNode","querySelector","appendChild","setTimeout","style","display","moveCircles","circles","querySelectorAll","headerWidth","offsetWidth","headerHeight","offsetHeight","forEach","circle","x","parseInt","left","y","top","angle","Math","random","PI","distance","deltaX","cos","deltaY","sin","animateCircle","width","requestAnimationFrame","audioVisualizer","console","log","audioCtx","AudioContext","analyser","createAnalyser","audio","Audio","audioSource","createMediaElementSource","connect","fftSize","bufferLen","frequencyBinCount","dataArray","Uint8Array","animateFullRainbowBar","paused","play","barWidth","barHeight","clearRect","height","getByteFrequencyData","i","hue","fillStyle","fillRect","save","translate","scale","restore"],"sources":["/home/charlijj/Desktop/websites/portfolio_two/portfolio_two_app/src/section_script/sectionScripts.js"],"sourcesContent":["export function headerAnimation() {\n\n    const ctx = document.getElementById(\"header-canvas\").getContext(\"2d\");\n    const titleText = \"Welcome To Jasper's Portfolio\";\n    const header = document.createElement(\"h1\"); \n    header.textContent = titleText; \n    header.classList.add(\"animate-in\", \"title\"); \n\n    const subtitleText = \"Enjoy Your Stay!\";\n    const subtitle = document.createElement(\"h3\"); \n    subtitle.textContent = subtitleText; \n    subtitle.classList.add(\"animate-in\", \"subtitle\"); \n\n    if (!ctx.canvas.parentNode.querySelector(\"h1\")) {\n        ctx.canvas.parentNode.appendChild(header, ctx.canvas);\n    }\n\n    setTimeout(() => {\n\n        if (!ctx.canvas.parentNode.querySelector(\"h3\")) {\n            ctx.canvas.parentNode.appendChild(subtitle, ctx.canvas);\n        }\n    }, 500)\n\n    ctx.canvas.style.display = \"none\";\n}\n\n\nexport function moveCircles() {\n    const circles = document.querySelectorAll(\".circle\");\n    const header = document.querySelector(\".App-header\");\n    const headerWidth = header.offsetWidth;\n    const headerHeight = header.offsetHeight;\n  \n    circles.forEach((circle) => {\n      let x = parseInt(circle.style.left) || 0;\n      let y = parseInt(circle.style.top) || 0;\n  \n      const angle = Math.random() * 2 * Math.PI;\n      const distance = Math.random() * 10;\n  \n      let deltaX = distance * Math.cos(angle);\n      let deltaY = distance * Math.sin(angle);\n  \n      function animateCircle() {\n        x += deltaX;\n        y += deltaY;\n  \n        if (x <= 0 || x >= headerWidth - circle.width) {\n          deltaX *= -1;\n        }\n  \n        if (y <= 0 || y >= headerHeight - circle.offsetHeight) {\n          deltaY *= -1;\n        }\n  \n        circle.style.left = `${x}px`;\n        circle.style.top = `${y}px`;\n  \n        requestAnimationFrame(animateCircle);\n      }\n  \n      animateCircle();\n    });\n  }\n  \n\n\nexport function audioVisualizer()\n{\n    const canvas = document.getElementById(`header-canvas`);\n    const ctx = canvas.getContext(`2d`);\n    console.log(canvas);\n    console.log(\"hellow\");\n\n    const audioCtx = new AudioContext();\n    const analyser = audioCtx.createAnalyser();\n    const audio = new Audio(`../ext_song.mp3`);\n    const audioSource = audioCtx.createMediaElementSource(audio);\n    audioSource.connect(analyser);\n\n    analyser.fftSize = 1024;\n\n    const bufferLen = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLen);\n\n    function animateFullRainbowBar() {\n\n        if (audio.paused)\n        {\n            audio.play();\n        }\n\n        const barWidth = canvas.width / bufferLen;\n        let barHeight;\n        let x = 0;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        analyser.getByteFrequencyData(dataArray);\n\n        for (let i = 0; i < bufferLen; i++)\n        {\n            barHeight = dataArray[i] * 2;\n\n            const hue = i * 10;\n            \n            ctx.fillStyle = `hsl(` + hue + `,100%, 50%)`;\n\n            // let red = 100;\n            // let blue = barHeight + 30;\n            // let green = barHeight + 50;\n\n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n\n            ctx.save();\n            ctx.translate(canvas.width, 0);\n            ctx.scale(-1, 1);   \n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n            ctx.restore();\n\n            x += barWidth + 5;\n\n            if (x > canvas.width/2)\n            {\n                x = 0;\n                break;\n            }\n        }\n        \n        requestAnimationFrame(animateFullRainbowBar);\n    }\n\n    audio.play();\n    animateFullRainbowBar();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}