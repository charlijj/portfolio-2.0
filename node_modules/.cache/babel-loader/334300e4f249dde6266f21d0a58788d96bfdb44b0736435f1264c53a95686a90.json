{"ast":null,"code":"export function headerAnimation() {\n  const ctx = document.getElementById(\"header-canvas\").getContext(\"2d\");\n  const titleText = \"Welcome To Jasper's Portfolio\";\n  const header = document.createElement(\"h1\");\n  header.textContent = titleText;\n  header.classList.add(\"animate-in\", \"title\");\n  const subtitleText = \"Enjoy Your Stay!\";\n  const subtitle = document.createElement(\"h3\");\n  subtitle.textContent = subtitleText;\n  subtitle.classList.add(\"animate-in\", \"subtitle\");\n  if (!ctx.canvas.parentNode.querySelector(\"h1\")) {\n    ctx.canvas.parentNode.appendChild(header, ctx.canvas);\n  }\n  setTimeout(() => {\n    if (!ctx.canvas.parentNode.querySelector(\"h3\")) {\n      ctx.canvas.parentNode.appendChild(subtitle, ctx.canvas);\n    }\n  }, 500);\n  ctx.canvas.style.display = \"none\";\n}\nexport function moveCircles() {\n  const circles = document.querySelectorAll(\".circle\");\n  const header = document.querySelector('.App-header');\n  const headerWidth = header.offsetWidth;\n  circles.forEach(circle => {\n    // Get current circle position\n    let x = parseInt(circle.style.left) || 0;\n    let y = parseInt(circle.style.top) || 0;\n\n    // Calculate random movement direction and distance\n    const angle = Math.random() * 2 * Math.PI;\n    const distance = Math.random() * 10;\n\n    // Calculate new circle position\n    x += distance * Math.cos(angle);\n    y += distance * Math.sin(angle);\n\n    // Smoothly move circle to new position\n    const intervalId = setInterval(() => {\n      // Get current circle position\n      let currentX = parseInt(circle.style.left) || 0;\n      let currentY = parseInt(circle.style.top) || 0;\n\n      // Calculate distance to new position\n      const distanceToNewPosition = Math.sqrt(Math.pow(x - currentX, 2) + Math.pow(y - currentY, 2));\n\n      // Move circle closer to new position\n      if (distanceToNewPosition > 1) {\n        const deltaX = (x - currentX) / distanceToNewPosition;\n        const deltaY = (y - currentY) / distanceToNewPosition;\n        currentX += deltaX;\n        currentY += deltaY;\n        circle.style.left = `${currentX}px`;\n        circle.style.top = `${currentY}px`;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, 10);\n  });\n}\nexport function audioVisualizer() {\n  const canvas = document.getElementById(`header-canvas`);\n  const ctx = canvas.getContext(`2d`);\n  console.log(canvas);\n  console.log(\"hellow\");\n  const audioCtx = new AudioContext();\n  const analyser = audioCtx.createAnalyser();\n  const audio = new Audio(`../ext_song.mp3`);\n  const audioSource = audioCtx.createMediaElementSource(audio);\n  audioSource.connect(analyser);\n  analyser.fftSize = 1024;\n  const bufferLen = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(bufferLen);\n  function animateFullRainbowBar() {\n    if (audio.paused) {\n      audio.play();\n    }\n    const barWidth = canvas.width / bufferLen;\n    let barHeight;\n    let x = 0;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    analyser.getByteFrequencyData(dataArray);\n    for (let i = 0; i < bufferLen; i++) {\n      barHeight = dataArray[i] * 2;\n      const hue = i * 10;\n      ctx.fillStyle = `hsl(` + hue + `,100%, 50%)`;\n\n      // let red = 100;\n      // let blue = barHeight + 30;\n      // let green = barHeight + 50;\n\n      ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n      ctx.save();\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n      ctx.restore();\n      x += barWidth + 5;\n      if (x > canvas.width / 2) {\n        x = 0;\n        break;\n      }\n    }\n    requestAnimationFrame(animateFullRainbowBar);\n  }\n  audio.play();\n  animateFullRainbowBar();\n}","map":{"version":3,"names":["headerAnimation","ctx","document","getElementById","getContext","titleText","header","createElement","textContent","classList","add","subtitleText","subtitle","canvas","parentNode","querySelector","appendChild","setTimeout","style","display","moveCircles","circles","querySelectorAll","headerWidth","offsetWidth","forEach","circle","x","parseInt","left","y","top","angle","Math","random","PI","distance","cos","sin","intervalId","setInterval","currentX","currentY","distanceToNewPosition","sqrt","pow","deltaX","deltaY","clearInterval","audioVisualizer","console","log","audioCtx","AudioContext","analyser","createAnalyser","audio","Audio","audioSource","createMediaElementSource","connect","fftSize","bufferLen","frequencyBinCount","dataArray","Uint8Array","animateFullRainbowBar","paused","play","barWidth","width","barHeight","clearRect","height","getByteFrequencyData","i","hue","fillStyle","fillRect","save","translate","scale","restore","requestAnimationFrame"],"sources":["/home/charlijj/Desktop/websites/portfolio_two/portfolio_two_app/src/section_script/sectionScripts.js"],"sourcesContent":["export function headerAnimation() {\n\n    const ctx = document.getElementById(\"header-canvas\").getContext(\"2d\");\n    const titleText = \"Welcome To Jasper's Portfolio\";\n    const header = document.createElement(\"h1\"); \n    header.textContent = titleText; \n    header.classList.add(\"animate-in\", \"title\"); \n\n    const subtitleText = \"Enjoy Your Stay!\";\n    const subtitle = document.createElement(\"h3\"); \n    subtitle.textContent = subtitleText; \n    subtitle.classList.add(\"animate-in\", \"subtitle\"); \n\n    if (!ctx.canvas.parentNode.querySelector(\"h1\")) {\n        ctx.canvas.parentNode.appendChild(header, ctx.canvas);\n    }\n\n    setTimeout(() => {\n\n        if (!ctx.canvas.parentNode.querySelector(\"h3\")) {\n            ctx.canvas.parentNode.appendChild(subtitle, ctx.canvas);\n        }\n    }, 500)\n\n    ctx.canvas.style.display = \"none\";\n}\n\n\nexport function moveCircles() {\n    const circles = document.querySelectorAll(\".circle\");\n    const header = document.querySelector('.App-header');\n    const headerWidth = header.offsetWidth;\n    \n    circles.forEach((circle) => {\n      // Get current circle position\n      let x = parseInt(circle.style.left) || 0;\n      let y = parseInt(circle.style.top) || 0;\n  \n      // Calculate random movement direction and distance\n      const angle = Math.random() * 2 * Math.PI;\n      const distance = Math.random() * 10;\n  \n      // Calculate new circle position\n      x += distance * Math.cos(angle);\n      y += distance * Math.sin(angle);\n  \n      // Smoothly move circle to new position\n      const intervalId = setInterval(() => {\n        // Get current circle position\n        let currentX = parseInt(circle.style.left) || 0;\n        let currentY = parseInt(circle.style.top) || 0;\n  \n        // Calculate distance to new position\n        const distanceToNewPosition = Math.sqrt(\n          Math.pow(x - currentX, 2) + Math.pow(y - currentY, 2)\n        );\n  \n        // Move circle closer to new position\n        if (distanceToNewPosition > 1) {\n          const deltaX = (x - currentX) / distanceToNewPosition;\n          const deltaY = (y - currentY) / distanceToNewPosition;\n  \n          currentX += deltaX;\n          currentY += deltaY;\n  \n          circle.style.left = `${currentX}px`;\n          circle.style.top = `${currentY}px`;\n        } else {\n          clearInterval(intervalId);\n        }\n      }, 10);\n    });\n  }\n\n\nexport function audioVisualizer()\n{\n    const canvas = document.getElementById(`header-canvas`);\n    const ctx = canvas.getContext(`2d`);\n    console.log(canvas);\n    console.log(\"hellow\");\n\n    const audioCtx = new AudioContext();\n    const analyser = audioCtx.createAnalyser();\n    const audio = new Audio(`../ext_song.mp3`);\n    const audioSource = audioCtx.createMediaElementSource(audio);\n    audioSource.connect(analyser);\n\n    analyser.fftSize = 1024;\n\n    const bufferLen = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLen);\n\n    function animateFullRainbowBar() {\n\n        if (audio.paused)\n        {\n            audio.play();\n        }\n\n        const barWidth = canvas.width / bufferLen;\n        let barHeight;\n        let x = 0;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        analyser.getByteFrequencyData(dataArray);\n\n        for (let i = 0; i < bufferLen; i++)\n        {\n            barHeight = dataArray[i] * 2;\n\n            const hue = i * 10;\n            \n            ctx.fillStyle = `hsl(` + hue + `,100%, 50%)`;\n\n            // let red = 100;\n            // let blue = barHeight + 30;\n            // let green = barHeight + 50;\n\n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n\n            ctx.save();\n            ctx.translate(canvas.width, 0);\n            ctx.scale(-1, 1);   \n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n            ctx.restore();\n\n            x += barWidth + 5;\n\n            if (x > canvas.width/2)\n            {\n                x = 0;\n                break;\n            }\n        }\n        \n        requestAnimationFrame(animateFullRainbowBar);\n    }\n\n    audio.play();\n    animateFullRainbowBar();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}